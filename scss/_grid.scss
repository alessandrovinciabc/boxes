@use 'sass:list';
@use 'sass:meta';
@use 'sass:map';

.container {
  .row {
    display: grid;
    width: 100%;
    grid-template-columns: repeat($columns, 1fr);
  }
}

//Generate gap classes
@mixin horizontal-gaps($multiplier) {
  grid-gap: $property-basis * $multiplier;
}

@mixin vertical-gaps($multiplier) {
  margin-top: $property-basis * $multiplier;
  margin-bottom: $property-basis * $multiplier;
}

@for $i from 1 through $property-multiples {
  .gap-#{$i} {
    @include horizontal-gaps($i);
    @include vertical-gaps($i);
  }

  .gapx-#{$i} {
    @include horizontal-gaps($i);
  }

  .gapy-#{$i} {
    @include vertical-gaps($i);
  }
}

@for $i from 1 through length($grid-breakpoints) {
  $prefix: list.nth(list.nth($grid-breakpoints, $i), 1);
  $value: list.nth(list.nth($grid-breakpoints, $i), 2);

  @media screen and (min-width: $value) {
    //Column classes
    @for $column from 1 through $columns {
      $new-postfix: null;
      @if $i == 1 {
        $new-postfix: #{$column};
      } @else {
        $new-postfix: #{$prefix}-#{$column};
      }

      .col-#{$new-postfix} {
        grid-column: span $column;
      }
    }

    //General spacing utilities
    @each $variation
      in map.merge(
        (
          '': '',
        ),
        $directions
      )
    {
      $variation-suffix: list.nth($variation, 1);
      $variation-prop: list.nth($variation, 2);
      @for $iteration from 1 through $property-multiples {
        .#{generate-responsive-class-name($iteration, 'p', $prefix, $variation-suffix)} {
          @include general-single-prop(
            $iteration * $property-basis,
            'padding',
            $variation-prop
          );
        }

        .#{generate-responsive-class-name($iteration, 'm', $prefix, $variation-suffix)} {
          @include general-single-prop(
            $iteration * $property-basis,
            'margin',
            $variation-prop
          );
        }
      }
    }

    //Display utilities
    @each $variation in $display-types {
      $middle-stuff: null;

      @if $i == 1 {
        $middle-stuff: '';
      } @else {
        $middle-stuff: #{$prefix}-;
      }

      .d-#{$middle-stuff}#{$variation} {
        display: #{$variation};
      }
    }
  }
}
