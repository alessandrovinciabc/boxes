@use 'sass:list';

// Margin and Padding utilities
$spacing: (
  m: margin,
  p: padding,
);

$directions: (
  l: left,
  r: right,
  t: top,
  b: bottom,
);

@function generate-responsive-class-name(
  $iteration,
  $base,
  $breakpoint-name,
  $modifier: ''
) {
  $first-breakpoint-name: list.nth((list.nth($grid-breakpoints, 1)), 1);

  $new-middlefix: null;
  @if $breakpoint-name == $first-breakpoint-name {
    $new-middlefix: '';
  } @else {
    $new-middlefix: -#{$breakpoint-name};
  }
  @return #{$base}#{$modifier}#{$new-middlefix}-#{$iteration};
}

@mixin general-single-prop($value, $prop-name, $variation: '') {
  @if $variation == '' {
    #{$prop-name}: #{$value};
  } @else {
    #{$prop-name}-#{$variation}: #{$value};
  }
}

//Display utilities

$display-types: flex grid block inline inline-block none;

//Grid/Flex
$grid-alignment-values: center start end stretch;
$grid-justify-values: center start end stretch space-around space-between
  space-evenly;

$flex-align-values: center flex-start flex-end stretch;
$flex-justify-values: list.join(
  $flex-align-values,
  space-between space-around space-evenly
);

$flex-directions: row column column-reverse row-reverse;
$flex-wraps: nowrap wrap wrap-reverse;

//Positioning
.translate-middle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
